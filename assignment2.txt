1.mkdir {a1,a2,a3,a4,a5,a6,a7,a8,a9,a10}
2.
echo "1. find length of string"
echo "2. concatenation of strings"
echo "3. compare two strings"
echo "4. Reverse a string"
echo "5. Exit"
echo "enter your choice:"
read choice
while [ "$choice" != "5" ]
do 
case $choice in
	"1")
		echo -n "Enter any string :"	
		read string
		length=$(echo $string | wc -c)
		length=$(expr $length - 1)
		echo "Length of string is "$length
	"2")
		echo -n "Enter first string :"	
		read firststr
		echo -n "Enter second string :"	
		read secondstr
		echo "Joining of two string is : $firststr$secondst
	"3")		
		echo -n "Enter first string :"	
		read firststr
		echo -n "Enter second string :"	
		read secondstr
		if [ `echo $firststr | grep -ci $secondstr` -gt 0 ]
		then
			echo "Both strings are same"
		else
			echo "Both strings are different"
		fi
	"4")
		echo "Enter any string :"	
		read string
		length=$(echo $string | wc -c)
		length=$(expr $length - 1)
		i=$length
		s=""
		while [ $i -gt 0 ]
		do
			 s=$s$(echo $string | cut -c$i)
			i=$(expr $i - 1)
		done
		echo "Reverse of the string is $s"	
	"5") 	
		exit
	"*")
		echo "invalid choice"
esac	
3)
4)
echo $HOME, echo $HISTORY,  echo $LOGNAME, echo $PATH,  echo $TERM,  echo $SHELL
5)
6)ls -al
7)find -type f -name "*.sh" -size +5k -ls


########################################################


1)
read -p " Enter year : " year
yr=$(( $year % 4 ))
yr1=$(( $year % 400 ))
if [[ $yr = 0 || $yr1 = 0 ]]

#if [[ $(( $year % 4 )) = 0 || $(( $year % 400 )) = 0 ]]
then
    echo " $year is leap year "
else
    echo " $year is not a leap year " 
fi

2)

a) elif	

echo "enter number between 1 to 7"
read num

if [[ $num -eq 1 ]]
then 
       echo "Sunday"  
elif [[ $num -eq 2 ]]
then 
       echo "Monday"
elif [[ $num -eq 3 ]]
then  
       echo "Tuesday"

elif [[ $num -eq 4]]
then 
      echo "Wednesday"
elif [[ $num -eq 5]]
then 
      echo "Thursday"
elif [[ $num -eq 6 ]]
then 
      echo "Friday"
elif [[ $num -eq 7 ]]
then 
      echo "saturday"
fi

b) case 

echo "enter number between 1 to 7"
read num

case $num in

1) echo "Sunday" ;;
2) echo "Monday" ;;
3) echo "Tuesday" ;;
4) echo "Wednesday" ;;
5) echo "Thursday" ;;
6) echo "Friday" ;;
7) echo "Saturday" ;;


esac

3)
A)
echo "enter 1st number"
read num1
echo "enter 1st number"
read num2
echo "enter 1st number"
read num3

if [ $num1 -gt $num2 ] && [ $num1 -gt $num3 ]
 then 
   echo " $num1 is greatest number"

   elif [ $num2 -gt $num1 ] && [ $num2 -gt $num3 ]
     then
       echo " $num2 is greatest number"
else
      echo " $num3 is greatest number"
fi
B)
echo "enter 1st number"
read num1
echo "enter 1st number"
read num2
echo "enter 1st number"
read num3

sum=`expr $num1 + $num2 + $num3`
avg=`expr $sum / 3`
echo "Sum = $sum"
echo "Average = $avg"

4)
read -p "Enter a number: " number
if [ $((number%2)) -eq 0 ]
then
  echo "Number is even."
else
  echo "Number is odd."
fi

5)
6)
A) 
let
a=10
b=20
 
sum=$(( $a + $b ))
 
echo $sum
B)
b) expr

echo "Enter two numbers"
read num1 num2
sum = 'expr $num1 + $num2'
echo "The sum is = $sum"

C)
bc

$ echo 'scale=4;10+20' | bc

7)
N=10 
a=0  
b=1 

echo "The Fibonacci series is : "

for (( i=0; i<N; i++ )) 
do
	echo -n "$a "
	fn=$((a + b)) 
	a=$b 
	b=$fn 
done

8)
echo "hello world"|rev
9)
input="$1"
reverse="Pravin"
 
len=${#input}
for (( i=$len-1; i>=0; i-- ))
do 
	reverse="$reverse${input:$i:1}"
done
echo "$reverse"
10)
read -p "Enter a number: " num
echo $num | rev

##############################################

1)
read -p "Please enter password: " PASS
COUNT=`echo ${#PASS}`
if [[ $COUNT -lt 8 ]]; then
echo "Password must be of atleast 8 characters!"
exit 1
fi
echo "$PASS"
echo $PASS | grep "[a-z]" | grep "[A-Z]" | grep "[0-9]" | grep "[@#$%^&*]"
if [[ $? -ne 0 ]]; then
echo "Password must contain atleast 1 uppercase, lowercase, digits and special characters"
exit 2
fi
echo "Strong Password"